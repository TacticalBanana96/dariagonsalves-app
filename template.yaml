AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Template to deploy to dariagonsalves.com

Parameters:
    EnvType:
        Type: String
        Description: the environment being deployed
        Default: stage
        AllowedValues: [stage, prod]

Conditions:
    isProduction: !Equals
        - !Ref EnvType
        - prod

Mappings:
    EnvMap:
        stage:
            mainBucketName: staging.dariagonsalves.com
            wwwBucketName: empty
        prod:
            mainBucketName: dariagonsalves.com
            wwwBucketName: www.dariagonsalves.com

Resources:
    MainBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !FindInMap [EnvMap, !Ref EnvType, mainBucketName]
            AccessControl: PublicRead
            WebsiteConfiguration:
                IndexDocument: index.html
                ErrorDocument: index.html

    WWWBucket:
        Type: AWS::S3::Bucket
        Condition: isProduction
        Properties:
            BucketName: !FindInMap [EnvMap, !Ref EnvType, wwwBucketName]
            AccessControl: PublicRead
            WebsiteConfiguration:
                IndexDocument: index.html
                ErrorDocument: index.html

    MainBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref MainBucket
            PolicyDocument:
                Id: MyWebsitePolicy
                Version: 2012-10-17
                Statement:
                    - Sid: PublicReadForGetBucketObjects
                      Effect: Allow
                      Principal: "*"
                      Action: "s3:GetObject"
                      Resource:
                          - !Join ["", ["arn:aws:s3:::", !Ref MainBucket, "/*"]]

    WWWBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Condition: isProduction
        Properties:
            Bucket: !Ref WWWBucket
            PolicyDocument:
                Id: MyWebsitePolicy
                Version: 2012-10-17
                Statement:
                    - Sid: PublicReadForGetBucketObjects
                      Effect: Allow
                      Principal: "*"
                      Action: "s3:GetObject"
                      Resource:
                          - !Join ["", ["arn:aws:s3:::", !Ref WWWBucket, "/*"]]

    BucketDNS:
        Type: AWS::Route53::RecordSetGroup
        Properties:
            HostedZoneId: Z07985952MEPKQCLXLNLI
            RecordSets: !If
                - isProduction
                - - Name: !FindInMap [EnvMap, !Ref EnvType, mainBucketName]
                    Type: A
                    AliasTarget:
                        HostedZoneId: Z2FDTNDATAQYW2
                        DNSName: !GetAtt BucketCloudFrontDistribution.DomainName
                  - Name: !FindInMap [EnvMap, !Ref EnvType, wwwBucketName]
                    Type: CNAME
                    TTL: 900
                    ResourceRecords:
                        - !GetAtt BucketCloudFrontDistribution.DomainName
                - - Name: !FindInMap [EnvMap, !Ref EnvType, mainBucketName]
                    Type: CNAME
                    TTL: 900
                    ResourceRecords:
                        - !GetAtt BucketCloudFrontDistribution.DomainName

    BucketCloudFrontDistribution:
        Type: AWS::CloudFront::Distribution
        DependsOn:
            - MainBucket
            - WaitCondition
        Properties:
            DistributionConfig:
                Origins: !If
                    - isProduction
                    - - DomainName: !Select [1, !Split ["//", !GetAtt MainBucket.WebsiteURL]]
                        Id: !Join ["-", [S3Origin, !FindInMap [EnvMap, !Ref EnvType, mainBucketName]]]
                        CustomOriginConfig:
                            HTTPPort: "80"
                            HTTPSPort: "443"
                            OriginProtocolPolicy: http-only
                      - DomainName: !Select [1, !Split ["//", !GetAtt WWWBucket.WebsiteURL]]
                        Id: !Join ["-", [S3Origin, !FindInMap [EnvMap, !Ref EnvType, wwwBucketName]]]
                        CustomOriginConfig:
                            HTTPPort: "80"
                            HTTPSPort: "443"
                            OriginProtocolPolicy: http-only
                    - - DomainName: !Select [1, !Split ["//", !GetAtt MainBucket.WebsiteURL]]
                        Id: S3Origin
                        CustomOriginConfig:
                            HTTPPort: "80"
                            HTTPSPort: "443"
                            OriginProtocolPolicy: http-only
                Enabled: true
                HttpVersion: "http2"
                DefaultRootObject: index.html
                Aliases: !If
                    - isProduction
                    - - !FindInMap [EnvMap, !Ref EnvType, mainBucketName]
                      - !FindInMap [EnvMap, !Ref EnvType, wwwBucketName]
                    - - !FindInMap [EnvMap, !Ref EnvType, mainBucketName]
                DefaultCacheBehavior:
                    TargetOriginId: !If
                        - isProduction
                        - !Join ["-", [S3Origin, !FindInMap [EnvMap, !Ref EnvType, mainBucketName]]]
                        - S3Origin
                    ForwardedValues:
                        QueryString: true
                        Cookies:
                            Forward: none
                    ViewerProtocolPolicy: redirect-to-https
                PriceClass: PriceClass_All
                ViewerCertificate:
                    AcmCertificateArn: !Join [":", [arn:aws:acm, !Ref AWS::Region, !Ref AWS::AccountId, certificate/98b745c9-bcfd-48db-a877-02aedb61c847]]
                    SslSupportMethod: sni-only

    WaitCondition:
        Type: AWS::CloudFormation::WaitCondition
        Properties:
            Handle: !If
                - isProduction
                - !Ref WWWBucketWaitHandle
                - !Ref WaitHandle
            Timeout: "20"
            Count: 0

    WaitHandle:
        Type: AWS::CloudFormation::WaitConditionHandle

    WWWBucketWaitHandle:
        Type: "AWS::CloudFormation::WaitConditionHandle"
        Condition: isProduction
        DependsOn:
            - WWWBucket
